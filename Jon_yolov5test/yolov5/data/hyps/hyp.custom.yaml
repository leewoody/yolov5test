# YOLOv5 ðŸš€ by Ultralytics, AGPL-3.0 license
# Hyperparameters for low-augmentation COCO training from scratch
# python train.py --batch 64 --cfg yolov5n6.yaml --weights '' --data coco.yaml --img 640 --epochs 300 --linear
# See tutorials for hyperparameter evolution https://github.com/ultralytics/yolov5#tutorials

lr0: 0.0157  # initial learning rate (SGD=1E-2, Adam=1E-3)
lrf: 0.0112  # final OneCycleLR learning rate (lr0 * lrf)
momentum: 0.98  # SGD momentum/Adam beta1
weight_decay: 0.00052  # optimizer weight decay 5e-4
warmup_epochs: 2.36  # warmup epochs (fractions ok)
warmup_momentum: 0.734  # warmup initial momentum
warmup_bias_lr: 0.162  # warmup initial bias lr
box: 0.0606  # box loss gain
cls: 0.731  # cls loss gain
cls_pw: 1.22  # cls BCELoss positive_weight
obj: 1.3  # obj loss gain (scale with pixels)
obj_pw: 0.79  # obj BCELoss positive_weight
iou_t: 0.20  # IoU training threshold
anchor_t: 4.27  # anchor-multiple threshold
# anchors: 3  # anchors per output layer (0 to ignore)
fl_gamma: 1.5  # focal loss gamma (efficientDet default gamma=1.5)
hsv_h: 0.0143  # image HSV-Hue augmentation (fraction)
hsv_s: 0.7  # image HSV-Saturation augmentation (fraction)
hsv_v: 0.515  # image HSV-Value augmentation (fraction)
degrees: 4.78  # image rotation (+/- deg)
translate: 0.12  # image translation (+/- fraction)
scale: 0.0 #0.5 # image scale (+/- gain)
shear: 0.0  # image shear (+/- deg)
perspective: 0.0  # image perspective (+/- fraction), range 0-0.001
flipud: 0.0  # image flip up-down (probability)
fliplr: 0.0  # 0.5 image flip left-right (probability)
mosaic: 0.148  # 1.0 image mosaic (probability)
mixup: 0.0  # image mixup (probability)
copy_paste: 0.0  # segment copy-paste (probability)

